@inject TransPoster.Data.ApplicationDbContext db

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var typeName = Context.Request.Query["typeName"];
    var declaringType = Type.GetType(typeName, throwOnError: false);
    var properties = db.Model.FindEntityType(declaringType.FullName)!.GetDeclaredProperties();
}

<h1>Products</h1>
<div class="container-fluid">
   
    <table id="db-table">
        <thead>

            @*title row*@
            <tr data-dt-title>
                @foreach(var prop in properties)
                {
                    // TODO:
                    <th data-column-name>@prop.Name</th>
                }
            </tr>

            @*filters row*@
             <tr>
                 @foreach (var prop in properties)
                 {
                     // TODO:
                     <th data-dt-filter></th>
                 }
             </tr>
        </thead>

        <tbody>
        </tbody>
    </table>

</div>

@section Styles{
    <link rel="stylesheet" href="~/lib/bootstrap-multiselect/bootstrap-multiselect.css" />
}

@section Scripts{
    <script src="~/lib/moment/moment.js"></script>
    <script src="~/lib/bootstrap-multiselect/bootstrap-multiselect.js"></script>
    <script src="~/js/dataTables/datatables.render.js"></script>

    <script>

        $(function(){
            const tableElem = $('#db-table');
            const columns = getColumnsFromDataTable(tableElem);
            console.log(columns, 'table columns');
            const dataTable = tableElem.DataTable({
                serverSide: true,
                ajax: {
                    url: '@Url.Action(@"IndexTable", "DbExplorer", new { typeName  })',
                    type: "POST"
                },
                columns: columns
            });

            createSearchRow(dataTable);
        });
    </script>
}